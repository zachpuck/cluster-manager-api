// Code generated by go-bindata.
// sources:
// api/api.proto
// DO NOT EDIT!

package protobuf

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _apiProto = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3b\x5d\x73\x1b\x37\x92\xef\xfa\x15\x5d\x7a\x39\xea\xca\x22\x2d\xd9\x4e\x72\xd2\xfa\xb2\x5c\xca\x71\x58\xb6\x25\x95\x28\xdb\x95\x27\x16\x38\xd3\x1c\x62\x35\x03\x4c\x00\x0c\x69\x66\x2b\xff\xfd\x0a\x5f\x33\xc0\xcc\x90\x92\x65\xf9\x52\xb7\x75\xaa\x4a\x4c\x02\x8d\x46\xa3\xbb\xd1\x5f\x68\x8e\x46\x30\xe1\xe5\x56\xd0\x6c\xa5\xe0\xf4\xf9\xc9\x4f\x30\x23\x85\xac\x58\x06\xb3\x8b\x19\x4c\x72\x5e\xa5\x70\x49\x14\x5d\x23\x4c\x78\x51\x56\x8a\xb2\x0c\x6e\x91\x14\x40\x2a\xb5\xe2\x42\x0e\x0f\x46\xa3\x83\xd1\x08\xde\xd3\x04\x99\xc4\x14\x2a\x96\xa2\x00\xb5\x42\x18\x97\x24\x59\xa1\x9f\x79\x06\x9f\x50\x48\xca\x19\x9c\x0e\x9f\xc3\x40\x03\x1c\xba\xa9\xc3\xa3\x73\x8d\x62\xcb\x2b\x28\xc8\x16\x18\x57\x50\x49\x04\xb5\xa2\x12\x96\x34\x47\xc0\x2f\x09\x96\x0a\x28\x83\x84\x17\x65\x4e\x09\x4b\x10\x36\x54\xad\xcc\x3e\x0e\x8b\xa6\x04\x7e\x73\x38\xf8\x42\x11\xca\x80\x40\xc2\xcb\x2d\xf0\x65\x08\x08\x44\x39\xa2\xf5\xdf\x4a\xa9\xf2\x6c\x34\xda\x6c\x36\x43\x62\x08\x1e\x72\x91\x8d\x72\x0b\x2a\x47\xef\xa7\x93\x37\x97\xb3\x37\xc7\xa7\xc3\xe7\x6e\xd1\x47\x96\xa3\x94\x20\xf0\xf7\x8a\x0a\x4c\x61\xb1\x05\x52\x96\x39\x4d\xc8\x22\x47\xc8\xc9\x06\xb8\x00\x92\x09\xc4\x14\x14\xd7\x44\x6f\x04\xd5\x7c\x7b\x06\x92\x2f\xd5\x86\x08\xd4\x68\x52\x2a\x95\xa0\x8b\x4a\x45\x3c\xf3\x24\x52\x19\x01\x70\x06\x84\xc1\xe1\x78\x06\xd3\xd9\x21\xfc\x63\x3c\x9b\xce\x9e\x69\x24\x9f\xa7\xb7\xbf\x5e\x7d\xbc\x85\xcf\xe3\x9b\x9b\xf1\xe5\xed\xf4\xcd\x0c\xae\x6e\x60\x72\x75\x79\x31\xbd\x9d\x5e\x5d\xce\xe0\xea\x17\x18\x5f\xfe\x06\xef\xa6\x97\x17\xcf\x00\xa9\x5a\xa1\x00\xfc\x52\x0a\x7d\x02\x2e\x80\x6a\x6e\x62\x6a\x58\x37\x43\x8c\x48\x58\x72\x4b\x92\x2c\x31\xa1\x4b\x9a\x40\x4e\x58\x56\x91\x0c\x21\xe3\x6b\x14\x4c\x6b\x42\x89\xa2\xa0\x52\x4b\x55\x02\x61\xa9\x46\x93\xd3\x82\x2a\xa2\xcc\x50\xe7\x5c\xc3\x03\x0d\xf2\x81\x26\x2b\x82\x39\x7c\x42\x86\x7f\x50\x02\x7f\x2b\xd6\xf6\xd3\xdf\xb3\x82\xd0\x7c\x98\xf0\xe2\xbf\x35\xdc\x38\xa7\x77\x04\xde\x13\x21\x91\xc1\xdf\x88\xfe\x36\xcc\xcd\xb7\x10\xf0\x40\x6e\x99\x22\x5f\xe0\x35\x1c\x96\x82\x2b\xfe\xe2\xf0\xfc\xe0\xa0\x24\xc9\x9d\x26\x35\xc9\x2b\xa9\x50\xcc\x0b\xc2\x48\x86\x62\x4e\x4a\x7a\x7e\x70\x40\x8b\x92\x0b\x05\x87\x19\xe7\x59\x8e\x23\x52\xd2\x11\x61\x8c\x3b\xb2\x87\x06\xcd\xe1\x79\x0d\x66\xbe\x27\xc7\x19\xb2\x63\xb9\x21\x59\x86\x62\xc4\x4b\x03\xda\xbb\xec\xe0\xc0\xce\xc2\x20\x13\x65\x32\xcc\x88\xc2\x0d\xd9\xda\xe9\x64\x9e\x21\x9b\x3b\x2c\x43\x87\x65\xc8\x4b\x64\xa4\xa4\xeb\x53\x3f\x73\x04\xaf\xe1\x5f\x07\x00\x94\x2d\xf9\x99\xf9\x04\xa0\xa8\xca\xf1\x0c\x0e\x27\xf6\x48\xf0\xc1\x1e\x09\xc6\xd7\xd3\xc3\x73\x03\xb1\xb6\x17\xec\x0c\x0e\xd7\xcf\x87\xa7\xc3\xe7\x6e\x38\xe1\x4c\x91\x44\x79\x3c\xfa\x8f\x91\x42\xa3\xf2\x77\x7d\x72\x39\xb9\x75\xc0\xfa\xaf\x12\xf9\x19\x1c\xea\x8b\x21\xcf\x46\xa3\x8c\xaa\x55\xb5\xd0\xbc\x1e\x49\x0b\x7f\x9c\xb0\x44\x8d\x1c\x6b\x8f\x1d\x6b\x8f\x49\x49\x03\x1c\xa8\x05\x74\x06\x87\x24\x2d\x28\xfb\x7b\xb8\x70\x48\xb9\x83\xfb\x53\xff\x63\xfe\x87\x5f\x14\x0a\x46\xf2\x79\xca\x13\xe9\x09\xfd\x56\x32\x52\x94\x89\xa0\x86\xc5\x67\x70\xf8\x81\x0b\x04\xb2\xe0\x95\x82\x5d\x1c\xfc\xf3\x00\x40\x26\x2b\x2c\x50\x9e\xc1\xaf\xb7\xb7\xd7\xb3\xf3\xf6\x88\x1e\x48\x38\x93\x95\x19\x39\x74\x17\x5f\x6f\x31\xfa\xa7\xe4\xcc\xa0\x29\x05\x4f\xab\x64\xd7\xfc\x9f\xe7\x07\x07\x12\xc5\x9a\x26\x58\x13\x62\xcf\xab\xef\x33\xcd\x73\xbd\x7e\x4d\x8d\xa5\x24\x5e\x7f\xcd\xbc\x28\x13\x98\x08\x24\x0a\xfd\xba\x41\xf4\xf5\x83\xcc\x8e\x40\xa0\xaa\x04\x93\xad\xa9\x1b\x2c\xf3\xed\x51\xa0\x00\xb5\x86\x9a\x1b\x30\x24\x25\x1d\x6a\x46\x7b\xbd\x6b\xfe\x4a\x2e\x15\x9c\xc1\xa1\xb9\x24\xeb\x13\xcf\xee\xc3\x08\x68\xc1\xd3\xad\x06\xfa\xcf\x66\xf8\x4f\x27\xe2\xe8\x64\x02\x95\xa0\xb8\xb6\x76\x46\x2a\xa2\x2a\xa9\x6d\x73\x7d\x4c\x6d\x43\x80\x2a\x09\x77\xd5\x02\x13\xce\x96\x34\x33\x66\x28\xe1\x8c\x61\xa2\xe8\x9a\xaa\x6d\xcd\x8a\xb7\xa8\x6a\x3e\x34\x9f\x63\x26\x34\xe3\x8f\xe7\x40\x86\xfb\x19\xd0\x7b\xd2\x14\x73\x54\xd8\x23\xc0\x0b\x33\x51\x13\x1e\x7d\x8d\x69\x8f\xa6\x1e\x4f\xbe\xa3\xe4\xab\x4f\x40\xd2\x7f\x56\x52\x01\xd9\xab\x8e\x63\x03\xe4\x68\xbc\xe4\x29\x4a\x18\x44\x63\xf1\x91\xa2\xa9\x6f\xd0\xc9\xea\x3b\xa8\x24\x81\x9c\x4a\xa5\xd5\xd1\xe1\x93\x3d\x9a\xf6\x5e\x83\x0c\xe2\xef\xbb\x34\x4e\xcf\x3d\xb5\xd6\x8d\x34\x8d\xf7\x9c\x88\x32\xa9\x48\x9e\xc3\x80\x0b\x10\xe8\xbe\x1d\x81\xa2\x79\x1e\x48\xee\xda\x4b\xf5\xd6\x8c\xc3\xa0\x35\x10\x9f\xaa\x35\xf9\x74\xe6\xc4\x52\xf5\x38\xd1\xed\x38\xe8\x0a\xf3\x02\x92\x15\x11\xca\x43\xdf\xea\x40\x72\xa3\x97\x2c\x50\x7b\x05\x25\xaa\xc4\x84\xb4\xd4\xd8\x1e\x0d\x0a\x2b\x22\x81\xe4\x02\x49\xba\x85\x05\x22\x83\x14\xcb\x9c\x6f\x31\x6d\xe2\x4c\x49\x0a\x34\x9e\xb3\x66\xe2\xd4\xee\xf9\x2b\xe6\xc5\xc4\x60\x19\xb4\x47\x62\x36\xb6\x67\x9f\x8e\x8f\xfa\xd0\x8f\xe3\xa2\xb3\x0f\xf5\x71\x5b\xec\x6b\x6c\x56\x70\xca\xd6\x40\x9f\xdd\x7a\x82\x33\x76\x2d\x57\x7c\xca\x5d\xf7\xb9\x12\xcc\x87\x42\x26\x80\x12\x85\x71\xc0\xce\xf9\x93\x92\x82\xf6\xbf\xc1\x5d\x78\x8b\xca\xe5\x26\xd3\x00\x7c\xd0\x0c\x77\xae\xb8\x1b\x7f\xb2\xeb\xed\xc8\x7d\xd8\xd9\xaa\x32\x13\x24\x45\xb7\x99\x34\x1e\x92\x40\x46\xd7\xc8\x3a\x06\xfa\x2d\xaa\x8f\x16\xdc\x59\xa5\xf6\x09\x77\xce\x76\xce\xbc\x13\xf2\xc9\x8d\x9c\x3b\xe0\x7d\x0e\x4a\x29\x2c\x4a\xa5\x73\x2c\xcf\x91\xae\x83\x8a\x89\x86\x41\xfc\x3d\x3e\x63\x3c\xf7\xd4\xee\xa9\x7b\xaa\xaf\xb9\xa5\x55\x99\x12\x1d\x4f\x6c\x24\x24\x02\x53\x64\x8a\x92\x5c\xea\x34\x39\x75\xf2\xef\x9e\x5c\xaf\x18\x7f\x9e\x4d\x02\xf8\x41\xdf\x68\x9b\x0b\x5d\x88\xa7\xe3\x45\x83\x73\x44\x36\xf2\xdb\x78\xf1\x47\x25\xf0\x2b\xb9\xa1\x97\xf4\xf1\xa3\x35\xde\xcb\x91\x16\xcc\xf7\xe1\x89\xde\xe4\xe1\x5c\xf9\xf3\xe0\x00\x59\x55\x58\x67\x9e\xd6\x89\x84\x4e\xbb\x97\x94\x61\x0a\xaf\xe1\xb9\x85\xd5\x8a\xf3\x1a\x4e\xdc\x17\xc3\xb9\xd7\x70\xea\xd2\xc6\x62\x43\xcc\xf7\x17\xe7\x35\x46\x77\x09\x66\x36\x46\xaf\xf3\x93\x4b\xae\x40\xa2\xf5\x0c\xb3\xdb\xf1\xed\xc7\xd9\xfc\xe3\xe5\xec\xfa\xcd\x64\xfa\xcb\xf4\xcd\x45\xb3\x9d\x71\xba\x08\xd7\x37\x57\x9f\xa6\xb3\xe9\xd5\xe5\xf4\xf2\xad\x89\xf7\x11\x28\x4b\x75\x42\x84\xd2\xb8\x54\x1f\xf7\x53\x09\x0b\xa4\x2c\xd3\xe2\x24\x0a\xd3\xa1\xc1\x12\x2d\xaf\xa9\x77\xb8\x6f\x3e\x5e\xde\x8b\x56\x3b\x75\xe3\xcc\x1d\x5a\x9b\x5f\x48\x58\x56\x79\xbe\x85\x4a\x92\x45\x8e\x76\x2b\x8f\xad\x66\x8a\xdf\xe5\xcd\xe4\xea\x72\x32\x7d\xdf\xbf\x13\x51\x20\x79\x81\xb0\xe1\xe2\x4e\xe3\x25\x26\xac\xc8\xb7\xee\x30\x29\x67\x08\x9c\x85\x24\x3d\x03\x59\x25\x2b\x20\xd2\xd9\x2c\x0d\xa6\xa7\x0b\x62\x08\xe6\x02\x18\x4f\xb1\x2e\x14\x39\xe2\x02\x22\x8c\x94\x02\x02\x67\xb7\x57\xd7\xd7\x0f\x66\xaf\x75\xa9\xa9\x93\x9f\x5b\xf9\x1a\x5e\x46\x28\xdf\xdc\xdc\x5c\xdd\xec\xc5\x57\x10\x7d\x44\xa8\x98\x65\xa1\x59\x6c\x57\xbd\x86\x57\x11\xae\x8b\x37\x6f\x6f\xc6\x17\x6f\x2e\xf6\xa2\x73\xa5\x34\x73\x81\x85\x61\xa2\x66\x1a\x07\x81\x52\xe9\xac\x5d\x8b\x0b\x96\x15\x33\x13\x24\xf7\x49\x60\x8d\xfb\x35\xfc\x60\x34\xb7\x40\x29\x49\x86\x30\x21\x79\xbe\x20\xc9\x5d\xa3\xb7\x9a\x94\x8f\x37\xef\x35\xd2\x44\x87\x8c\x66\x56\x71\x33\x2d\x95\xd0\xac\xa9\x44\xde\xd1\xb1\xe9\x85\x2f\x1d\x6a\x12\x51\xaa\x70\x81\x1b\x9a\xd3\xd4\x6a\x4d\x48\x40\x2b\x2d\x0f\x2e\x90\x8e\x21\x1d\x4e\x7f\x7c\xc5\x35\x33\xeb\x34\xcb\x89\xc7\xed\xa2\xe3\xcd\x0e\x5d\xa5\xbf\xef\xbe\x36\x67\xfc\xb0\x81\x88\xb6\xf6\x76\x61\x56\x62\xd2\x2c\x0a\x75\xbc\x66\x55\x10\x28\x59\x3c\x7e\x22\xf1\x1f\xbc\x7d\xe8\x3d\xa4\xb1\x86\x41\x1d\x63\x85\xa6\xd4\x68\xf4\x59\x45\xa7\xdd\x10\x19\x9e\x15\x16\x5b\x5b\xe8\x0d\x39\xbc\xe0\x3c\x07\x7e\xd7\x39\x77\x8a\x8a\xd0\x5c\xb6\x19\xe8\x96\x6a\x7d\x29\x39\x93\x56\x1f\x7d\x9c\xa2\xb0\xa8\x01\xdb\x72\x8a\xca\x06\x0f\x11\x52\xce\xf9\x1d\xa6\x50\x95\x7b\x45\x34\xfe\x3c\x83\xc0\x53\x98\xe1\x96\x23\xb6\xf6\xb8\x91\x83\xf1\x2e\xdd\x45\x6d\x7f\xe5\x2d\x77\x63\x03\x42\x5a\xbd\x84\x25\x0c\xc8\xc6\x39\x93\x91\xb5\xee\x23\x54\xc9\x91\x35\xaa\x5e\x0d\x02\x7d\x78\xb9\x83\x2b\x2d\xa9\x4e\x5b\x56\xc5\x5a\x36\xb9\x95\x0a\x8b\xae\xdc\x42\x29\x5c\x18\xc1\xed\x95\x45\xbb\x12\x12\x2a\x13\x51\xda\x84\x05\x7b\xff\x87\xb4\x5c\x57\xdc\xe6\x73\x7c\xfb\x6f\x27\x90\xc7\x5c\xd0\x57\xbb\x39\xda\x12\xe5\x84\x57\x79\x1a\x49\xd3\xa7\xc6\x3a\x09\xdc\x79\x09\x67\x75\xcd\x6e\x87\x51\x74\x45\xbd\xdd\x17\xcd\x55\x4c\x1a\x4a\x1e\x2c\x9b\x93\xc7\xca\xe6\xf4\x7f\xe7\xb2\xd4\xf5\x9e\xc7\x5e\x18\xb7\xe8\x7d\x6f\x19\x0a\x4b\x1b\xc1\xf4\x98\xb5\x2e\xbb\x43\xa0\x86\x98\x8b\x96\x4d\x0b\xe5\x66\x9c\xd8\x49\x2f\xa3\x7a\xa0\xdd\x05\x0b\x6e\x4b\x9a\x52\xeb\x9c\x7b\x32\xee\xb8\xd8\xbb\x03\xa5\x05\x98\xfb\x13\xb4\xc3\x9c\xdd\xeb\xe3\x48\xb5\xd6\xbf\x97\x7d\x0c\x09\xcc\xd0\xff\x7d\xb6\x84\x66\x31\xa8\x97\xeb\x10\xc7\x96\xcb\xf5\xc7\x1d\x68\x03\xf8\x76\xf4\xf7\xd5\x9c\x7e\xb5\x3b\x2a\x88\xe2\x8f\x5e\x7b\x5e\xdf\xab\x63\x48\x2a\x21\x90\xa9\xdc\xc5\x03\xd4\xde\x7b\xae\xa3\x4d\x22\xef\x0d\x89\x7c\xc1\x87\x2f\xe1\x5d\xb5\x40\xc1\x50\x61\xb4\xea\xee\x27\x39\xf7\x40\x46\x46\x66\x92\x33\xe4\xcb\x9a\x8a\x79\x28\xa5\x26\x69\x73\x5b\x68\x4b\xd5\x0d\xb8\x3a\x41\xd7\xf8\xf3\xcc\x9c\xd7\x5a\xad\x17\xe7\x3b\xa0\xde\x39\x28\x67\xa4\x5e\xee\x80\xfb\xf4\xe1\x33\x11\x68\x40\xeb\x3c\xed\x47\x9f\xff\x3d\x20\xdc\xa2\x12\x7e\x1d\x37\xb6\x66\x45\xb3\xd5\x9c\xac\x09\xcd\xc9\x82\xea\x48\xba\x13\xb1\x2f\xc9\x42\xd0\xc4\xc5\x3b\x3a\xa3\x8e\x58\x8f\x4a\xe7\x3a\x73\x07\x64\x02\xef\x9d\xd2\xf7\x8c\x88\xa2\x70\xcd\xc4\x0b\xa2\x08\x4c\x90\x79\xc5\x1a\x7f\x9e\xe9\x21\x3b\x02\x29\x51\x64\x9e\xd8\xcf\xa1\x94\x43\xd3\xae\xa9\xab\x68\xec\xc1\xfa\x3c\x47\x58\x1d\x08\x2f\xe6\x3f\x7e\xbb\x02\xaa\xb0\xa8\xdd\xcd\xb5\x70\xf7\xa1\x12\x98\x6a\x03\xa1\x03\x52\xc9\x2b\x91\xa0\x8c\x6e\x9d\x29\xe1\xb2\x04\x21\x13\xbc\x2a\x5b\xc6\x79\xfc\x79\xe6\xe7\xdf\xea\x69\x5b\xa2\x66\x09\xce\x2d\xb4\x95\x73\x23\x35\x9a\xac\x3a\xcc\xf0\xac\x8c\x99\x12\x29\xa3\x5d\x28\x30\x33\xf5\x86\x4a\x1e\x23\x91\xea\xf8\xe4\x19\xa0\x4a\x86\x47\x35\x64\x9d\xa7\x64\x56\xe7\x4f\xce\xbb\x48\x22\x55\xf8\x83\x33\x94\x01\xc2\xc5\x33\xf0\x9f\x4f\x13\xf3\x79\x83\xfa\x73\xda\xde\xa9\x66\x80\xdb\x32\xc4\x3a\xb7\x58\x6b\xee\x37\x5a\xfb\x0b\x17\xb0\x59\x21\xb3\x39\xb4\x5a\x51\x96\x49\xd0\x1a\xee\xeb\xf0\x2e\x6b\x6f\xb3\xa5\x47\x56\x9d\xbb\xfa\xe9\x7a\x02\x34\x7d\x06\x8b\x9c\xb0\x3b\x53\x13\xd2\xff\x1d\x5a\x8c\xfa\xd6\x9b\xef\x5b\x5e\x1d\x3e\x83\x25\xcd\x73\x4c\x81\x2e\x4d\x07\x8a\x26\x40\xab\xc7\xa7\xeb\x49\x9b\x93\xeb\x32\x99\x87\x1e\xc1\x07\x45\x98\x54\x42\xf3\xcf\x08\xb9\xbd\x48\xba\x59\xab\x02\x75\xb6\xd8\xa2\x77\x3a\xfe\x00\x82\xe7\x4d\xd7\x85\xbf\xbf\x03\x22\xd8\x91\xbf\x50\x52\xf2\x84\x1a\xd3\x93\xa6\xed\x7d\x28\x29\xe6\x1a\xc3\x9c\x08\xd6\x68\x6c\xc3\xed\x96\xe2\x82\x2d\x11\x01\x01\xb5\x2d\xd1\x14\x46\x58\x55\x2c\xb4\x11\x59\xd6\x6a\x2b\xdb\xac\x8f\xb5\x3b\xe2\x7a\x8d\xdf\xe0\x1b\x14\xaf\x86\x39\x11\x19\xee\x50\x4a\x03\xd4\x66\xe4\x07\xca\x68\x51\x15\x7d\x84\xc0\x20\xc5\x25\xa9\x72\x65\xee\xfe\x1f\x28\x78\x83\x92\x32\xf5\xe2\x14\x0a\xca\xe6\xbf\x57\x84\x29\x6b\xd4\x62\x16\x7f\x20\x5f\xbe\x01\x33\xf9\x12\x62\x7e\x11\x54\xdf\x46\x23\x1d\x00\x86\xce\x67\x7c\x3d\x85\x99\x7d\x5e\x08\x42\xc4\xe6\x1d\x01\xfe\xe5\xd6\xd9\x50\x51\x8b\xdb\xaf\xf6\xe1\x74\x77\x5d\x3b\xac\x5c\x02\x2f\x51\x58\x37\xa5\xf3\xe9\xab\x77\x3b\xd2\x2f\x8f\xaa\xe7\x79\xa3\x73\x65\x14\xc9\x7c\xb1\x2a\xa3\x3a\x99\x2e\xb9\xa4\x8a\x8b\x6d\x5b\x76\x19\x55\x81\x27\x3d\xe9\xe8\xf2\x8a\xc8\x95\x8f\x1f\x34\xa6\x84\x17\x05\x55\x7d\x58\xec\x4c\x47\x5a\x3d\xee\x4c\x09\x44\x73\xd4\x24\x47\xc2\xac\xd9\xd0\x1e\xa0\x17\xad\x06\x9e\xdb\x82\x53\xe4\x80\x47\x23\x6d\x6d\x4d\x04\x67\xbc\x47\x7b\xad\x19\x9c\xa7\x76\xdd\xcb\x68\xdd\xa7\x46\xc2\x19\xb7\x85\x66\x13\x68\x15\x25\x75\xf5\xaf\x90\x06\x1e\xf0\xe7\x55\x84\x67\x62\x57\x88\xc6\xb3\x06\xeb\x12\x3f\x69\xfc\x6a\xb0\xea\x3a\x27\x4a\x4b\x0e\xa8\xb2\x4c\xb0\x80\xb6\xd8\x3d\x02\x51\x31\xd3\x8d\x15\x44\x24\x0e\x63\xe9\x17\xf6\x04\x0d\xfe\x48\xd3\x56\x62\xd9\xa3\x2b\xee\x34\x51\x78\xe4\x73\x0e\x27\xf4\x24\xf6\xce\x95\x6b\x20\x33\x06\xd7\x17\x39\xbd\xa3\x0e\x0c\x4a\xe8\xac\xa3\x38\x61\x86\x89\x40\xf5\x0e\xb7\x53\x7b\x4a\x7d\xaf\xc6\x49\x82\x32\x0a\xea\xa4\x81\x9a\xdf\xe1\x76\xde\x0a\xd5\x1b\x1c\x76\xd5\x3b\xdc\xd6\x78\xc8\x2e\x3c\x76\x42\xa3\xeb\x16\x82\xad\x17\xdd\x8d\xa2\x76\xb3\xb6\x4a\xf6\x4d\x7c\x69\x67\xb2\x71\x04\x55\x96\x7b\x79\x42\xca\xb2\x8f\x19\xb7\xc8\x08\x53\x7b\x0e\xa0\x2c\x40\xfb\xe0\xd7\x44\xca\x0d\x17\xe9\x9e\x95\xa5\x07\xe9\x14\xa7\xab\x45\xdd\x82\xb5\x8f\xfb\x01\x98\x25\xfd\xa5\x57\x2d\xcd\x1e\x92\x24\xbc\x62\xca\xde\x3a\x53\x2e\x8c\xca\x72\xce\xa7\xdb\x40\xba\x09\xda\x06\xf8\xe5\x0c\x72\x4e\x52\x58\x90\x5c\x5b\x7a\x71\xd4\x62\xb0\x4b\x67\x6c\x2f\xd6\xd8\x6d\x12\xb1\x7a\x92\x53\x64\x6a\x9a\xc2\x80\xdc\x91\x33\xc3\xf9\x8b\xa3\x90\xf2\xc4\x00\xf4\xb1\xdb\x2e\xb5\x1a\xe8\x96\x7b\x36\xf5\x61\xb0\x0a\xe8\x2f\x55\x7f\x38\xfd\xae\x2f\x9c\x36\xa7\x6e\xc7\x90\x0e\x77\xce\x13\x7f\x57\xbf\x36\x8c\x6e\x6b\xe0\xae\x40\x7a\x7f\x38\xfc\xee\x6b\xc2\xe1\x27\x08\x50\xda\xfb\x75\x7c\x1c\x0b\x12\xf8\xde\x68\x2d\xce\x2d\xdb\x94\xd9\xd0\x66\xa6\x08\x4b\x89\x48\xe7\x17\xa7\xf3\xf5\xe9\xfe\x00\xe7\xf4\xbb\x05\x38\x2f\xbe\x5b\x80\xf3\x32\x08\x70\x7a\x35\x31\xc8\x49\x6b\x65\xfc\x40\x92\x15\xd5\x81\xfe\xc6\xe4\x15\xda\x43\x09\x2a\xb1\xa3\x59\xb5\x72\x58\x24\x6e\x99\xc1\x95\x70\xa6\x04\xcf\xe7\x65\x4e\x18\xce\x99\xe9\x26\x0b\x2d\xca\x13\x6c\xa1\x93\x57\x14\x35\xee\xb0\xf2\x41\x25\xc8\x95\xa9\x8a\x2e\xb4\xd2\xad\x49\x5e\x21\xe4\xf4\x0e\x81\x96\x67\xa6\x0f\xd8\xbc\xf7\xf9\x36\x22\x02\x6b\x2a\x54\x45\x72\x98\x5e\x8f\xf4\xb4\xc7\xa4\xed\xa5\xb6\x53\xf6\x85\xa9\xee\x6c\x85\xa4\x92\x8a\x17\x28\xa4\x4b\xad\x4d\xb7\xb8\x8d\x21\x8a\x8a\x99\x57\xb1\x3d\x05\x1b\x52\xd2\x39\xb2\xb4\xe4\xd4\x98\xe8\xb8\xe6\xd2\x14\x3c\xde\x93\x05\xe6\xb1\x85\xf0\x2a\x4f\x20\xd7\x93\xf7\x17\x52\xcc\xc1\xfb\x17\xd8\xb9\x96\xe7\x8f\x4a\x22\xee\xf9\xbd\xee\x19\xd7\x9c\xae\xe9\xec\xca\x23\xa2\xb4\x92\x9a\x53\x85\x75\x90\xb3\xd9\xaf\x3d\x9e\xa2\x06\x69\x53\xbd\xe2\x52\xed\x59\x67\xa6\xdb\x9e\xcd\x08\xb5\x67\x8d\xbd\x14\x66\xb6\xed\xd0\xee\x7e\x92\x75\xb8\x5e\x67\x6a\x56\x6d\xc1\xa8\xed\xd0\x6a\x92\x79\xc4\xa5\x12\x38\xcb\xb7\x40\xfc\xeb\x2e\x5d\xfa\xdf\x34\x60\x6e\xde\xa1\xdd\x33\xfd\x70\x87\x33\x8d\x0b\x73\x46\x1a\xb2\xde\xb6\x70\xb7\x21\x56\xf9\xb6\x2a\xb8\x45\x6d\x8d\xe9\x36\xfb\xf5\xbf\x7e\xd9\xf6\x3c\x18\x81\xef\xa7\x77\x5d\xd6\x7d\x5a\xd4\x3c\xfd\xfb\x6e\x1b\xb7\xba\xb9\x56\xae\x47\xcf\xfc\xa0\x21\x76\x82\xfe\x4d\x28\xae\xb5\xca\x92\x24\xb8\x0f\x0d\x65\x6d\x4a\xec\x92\x50\xd4\xb4\xd0\x84\x0f\xe8\xb2\x4e\x26\x9c\x3d\x3c\xb2\xbc\x74\xfd\x8f\xbf\x57\x64\x3b\xa4\x7c\x24\x79\x81\x59\xb5\x75\x9d\x89\x91\xaf\xb6\x98\x5e\xc3\x49\x43\x65\x90\x17\xd8\x05\xa6\x47\xcd\xfe\xee\xc3\x76\x27\x8e\xea\xee\x24\xc5\x61\xb0\x3e\x1d\x9e\x9c\x0c\x9f\x1b\xa7\x11\xe1\x6e\x12\x86\xa0\xd6\x24\x43\x21\xd4\x4d\x2d\xc7\x1b\x9a\xfa\xd1\x9f\x3d\xec\xcc\x72\x87\x2a\x58\x91\x35\xc6\xa0\xa6\x07\x1f\x4a\x41\xd7\x34\xc7\x0c\xe5\xcf\x4d\xb6\xe8\x7f\x1f\x61\xe0\x42\x8d\xab\xd9\xef\xfa\x1c\xa8\x0a\xcd\xa3\xb3\x5d\x16\xb1\x93\x65\xa7\x08\xa4\x27\xe7\xac\xc1\x13\x56\x1a\x1f\xfc\xea\xf3\xc3\x63\x5f\x7d\x7e\x7c\xda\x57\x9f\x9f\x1e\xf7\x22\xf7\x5f\xfb\xae\x5d\xfb\xd1\x9c\x58\x79\x37\xb9\xbd\xac\x8c\x55\x5a\x56\x79\x37\xbf\x87\xa0\x98\xee\xf0\x4b\xd8\xa0\x40\xdb\x09\x18\xea\x56\xf3\x7a\x10\x3f\x13\xf5\x34\xab\x06\x2f\x84\x4f\x71\x89\x0d\x75\x1d\x0c\xed\xaa\xb2\x33\x2e\xf3\x82\xb0\xac\xdd\x9f\x60\x1a\x4e\x67\xa8\x74\xb2\x64\x25\xfe\x16\x19\x0a\x9a\x34\xed\xa8\xb6\x81\x37\xbc\x38\x0f\xd6\xae\x97\x8f\xd5\xae\x57\x4f\xab\x5d\x3f\x3c\x4e\xbb\x7e\xdc\x2b\xce\xbf\x5a\xbd\xba\x5d\xc2\x7f\xb5\x76\x91\x7e\xf5\xba\xf4\x3d\xdd\x7e\xaf\x7f\x27\x85\x1a\x43\xc5\xe8\xef\x15\x02\x75\x3f\x47\x4c\x5d\xac\xd9\x6e\xba\xe9\x6b\x6b\xfa\xf1\x71\x7a\xf9\xd3\x3e\x3d\xf8\xab\xd5\xb2\x63\x3f\x7a\x1f\x26\xc3\x4c\xd1\xf6\xc6\x17\xc8\xd4\xde\xe8\xb9\xbd\xdc\x45\x2f\xdc\xad\xb7\xb5\x8c\xe6\x07\x61\xad\xfe\xb3\xfe\xe0\x25\xea\x7d\x31\xd4\xb6\xea\xb2\x9e\xa5\x6e\xcc\x4c\xef\x7c\x26\xb6\x18\xd8\x0e\x75\x7f\xb9\x67\x8d\x0b\x4f\xfa\x23\x96\x57\xf1\x42\x22\xd0\x49\xd4\xf6\xa7\x0f\x18\x4a\x1d\x17\x6c\x49\x91\xc3\xb1\x99\xfa\xa4\x13\x09\x39\x34\x23\x3a\x7e\x46\xa6\xe4\x51\x27\xd3\x88\xfd\xbf\x09\xd9\xc9\xd6\x94\x74\x78\xf3\xc3\x8d\x81\xc9\x38\xa8\xc8\x48\x59\xea\xe0\x83\xe7\x95\xd9\x36\x08\xb1\x16\x5b\x85\xd2\x82\xcf\x3d\x06\xa3\xdb\x51\xf5\xa0\xcd\xc9\xd6\x93\x5b\xc3\x91\x8f\x37\xef\x9b\xe0\xbf\x96\x49\xbb\x00\x10\xf5\x13\xf6\x60\x31\x82\xaa\x45\xd1\xd5\xab\xd3\x9e\x2c\xfc\x9e\x7e\xfd\xfe\x18\xfe\xd1\x36\xe4\xaf\xe9\x9f\xea\xe9\xf6\x72\x99\x37\x1a\xcd\x4a\x38\x93\x9a\x40\xcd\x2a\x2d\x05\x17\x5d\xf7\xdc\xcc\x4e\xa3\xce\xfe\x5f\x30\x04\xce\x89\xb0\x76\x6b\x94\xdb\x65\x77\x67\x94\x21\xdb\x5d\x09\xfb\x8a\x59\x72\x29\xa9\x0e\x94\xed\x8f\xeb\x19\xdf\xf4\x86\xc9\xf5\x9a\xb6\x9d\xea\xfc\x54\xe1\xff\xc5\xdb\x16\x6f\x0f\xef\x0d\x92\x0d\x86\xed\xd5\xfc\xe7\xfb\xcc\xd6\x57\x39\xb7\x1f\xf6\x48\xa9\xd7\xb7\x51\x09\x24\x70\x6a\xbb\x3b\x5d\x03\xb4\xed\x1f\x51\xee\xed\x86\x7c\x24\x03\xfb\xfb\x9a\x1e\xad\x4f\xa7\x5f\xaf\x4f\x8d\x5a\xd4\x08\x93\x95\x4e\x02\xec\x9a\x56\x73\x8e\x9b\xfa\x9a\xc6\x9c\xd1\x28\x62\x64\xdc\x9a\x13\xbc\xcc\xc5\x50\xad\xd6\x9c\x1f\x76\xc0\xed\x6d\xcd\x79\x64\xd8\x14\x79\xa4\x5d\xbb\x45\x0c\x68\x55\x45\x37\x08\x1b\xc2\x94\xcd\xce\xd3\xbe\x8a\x22\xec\x2f\x91\x92\x34\xad\xeb\xa3\xad\xe7\xf9\x9d\x3b\x09\x2c\xf8\x1a\x61\x29\x78\xf1\x90\xed\x6e\x0c\x78\xb8\xa9\x45\x50\xef\x1b\xb7\x8a\xc4\xe5\xc3\xee\xe2\x8e\x3e\xec\x2a\x06\x42\xa7\x20\x78\xd2\xbb\x51\xaf\x36\x44\xbb\x3c\xe8\x11\xa5\xd7\x22\xc6\x0f\x29\x31\x83\x2f\x79\x8a\x70\xad\x2d\xc2\x65\x5f\x5c\xc0\x53\x9c\x97\x7a\xb6\xfd\xac\x60\x6b\xfe\x26\xb8\x4f\x04\x12\x89\xb0\x68\x1e\xed\x6d\x35\x53\x4b\xd5\x3e\x70\xb5\x5f\x0e\x58\xbd\x3a\xc5\x5d\xab\x9d\x78\x3c\x82\xfa\x81\x60\xa7\xc5\x7a\x32\x3b\xb8\xe3\xf7\x6a\xdd\x44\xb2\x1d\xd4\x76\x6c\xdc\x93\xb4\x8f\xdd\x43\xd9\x53\x1f\xbb\xfb\xb3\xb4\xef\x76\xf0\x7b\x1f\xfc\xee\xa5\xee\x9b\x0f\xff\x3f\x01\x00\x00\xff\xff\xda\xc4\x72\x83\x8c\x48\x00\x00")

func apiProtoBytes() ([]byte, error) {
	return bindataRead(
		_apiProto,
		"api.proto",
	)
}

func apiProto() (*asset, error) {
	bytes, err := apiProtoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api.proto", size: 18572, mode: os.FileMode(420), modTime: time.Unix(1539675738, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"api.proto": apiProto,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"api.proto": &bintree{apiProto, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
