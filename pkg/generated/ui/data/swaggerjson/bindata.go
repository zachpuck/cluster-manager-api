// Code generated by go-bindata.
// sources:
// assets/generated/swagger/api.swagger.json
// DO NOT EDIT!

package swaggerjson

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _apiSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\xff\x6f\xdb\xb8\x92\xff\xbd\x7f\xc5\xc0\x77\xc0\x65\x81\xc6\xee\xf6\xf0\x80\x87\x1e\x0e\xef\xf2\x92\xbe\x3e\xa3\x6d\x1a\xc4\xfd\x82\x87\xeb\xc2\xa0\xa5\xb1\xcd\x8d\x44\xaa\x24\x65\xaf\xf7\xd0\xff\xfd\xc0\x2f\xb2\x25\x59\xb4\x65\x29\x89\x95\xd6\x0b\x2c\x1a\x4b\xd4\x70\x66\x38\x24\x3f\x9c\x19\x92\xff\xf7\x0c\xa0\x27\x97\x64\x36\x43\xd1\x7b\x05\xbd\x97\xfd\x17\xbd\xe7\xfa\x19\x65\x53\xde\x7b\x05\xfa\x3d\x40\x4f\x51\x15\xa1\x7e\x7f\x19\xa5\x52\xa1\x80\xf7\x84\x91\x19\x0a\xb8\xb8\x19\x9a\xf2\x00\xbd\x05\x0a\x49\x39\xd3\xa5\x16\x2f\xfa\x19\x21\x80\x5e\xc0\x99\x22\x81\x5a\x53\x03\xe8\x31\x12\x1b\x72\x23\x12\xcb\x94\xcd\xe0\xf2\xfa\xf2\xa3\x2b\x0e\xd0\x4b\x45\xa4\x5f\xce\x95\x4a\xe4\xab\xc1\x60\x46\xd5\x3c\x9d\xf4\x03\x1e\x0f\xa4\x2d\x7f\x1e\xb0\x40\x0d\x02\xcb\xcb\x79\x6c\x79\x39\x27\x09\xdd\xd0\xc0\x98\x50\x43\x85\x84\x31\x65\xff\x93\xff\xb0\x4f\x79\xcf\x14\xfb\xfe\x0c\xe0\xbb\x91\x56\x06\x73\x8c\x51\xf6\x5e\xc1\xff\x5a\x9e\x4d\xdd\x99\x00\xfa\x87\xfe\xe2\x37\x53\x36\xe0\x4c\xa6\x85\xc2\x24\x49\x22\x1a\x10\x45\x39\x1b\xfc\x2e\x39\xdb\x94\x4d\x04\x0f\xd3\xa0\x66\x59\xa2\xe6\x72\xa3\xf2\x01\x49\xe8\x60\xf1\x6b\x26\x65\x5e\x7b\x33\xcc\x2b\x53\xb3\x9f\xc6\x31\x11\x2b\x2d\xee\x17\x1a\x45\x20\x50\x09\x8a\x0b\x04\x35\x47\x90\x8a\xa8\x54\x02\x9f\x02\x01\x47\x0c\x08\x0b\x81\x2a\x09\x77\xe9\x04\x03\xce\xa6\x74\x06\x53\x2e\x20\xe0\x8c\x61\xa0\xe8\x82\xaa\xd5\x5a\x95\x00\x3d\x9e\xa0\x30\x2c\x0f\x43\x5d\xc7\x1b\x54\xce\x0e\xf2\x85\x04\xca\x84\x33\x89\xb2\xc0\x1b\x40\xef\xe5\x8b\x17\xa5\x47\x00\xbd\x10\x65\x20\x68\xa2\x9c\xc5\xe4\x08\x59\x89\x74\x83\x90\xad\xcf\x00\x7a\xff\x2e\x70\xaa\xbf\xf8\xb7\x41\x88\x53\xca\xa8\xa6\x20\x33\x2d\x8d\x9d\x2d\x8c\x49\x42\x37\x5c\xde\x62\x12\xad\x7a\x05\x42\xdf\x9f\x55\xfd\xfd\x3d\x27\x4e\x42\x04\x89\x51\xa1\xd8\x34\x9e\xfd\xaf\x24\x48\x66\xca\xe6\xdf\xe7\x3b\x85\xbc\x26\x31\xea\x76\xd0\xad\x92\xb5\x84\xe2\x30\x41\x88\x38\xbf\xc3\x10\xd2\xa4\x5f\x26\x41\xcd\x97\xdf\x52\x14\xab\xf2\x2b\x81\xdf\x52\x2a\x50\x37\xc9\x94\x44\x12\x4b\xaf\xd5\x2a\x31\x8c\x49\x25\x28\x9b\xe5\xc5\xff\xfe\x7c\xbf\x38\x64\x29\xfb\x12\x03\x81\x6a\x7c\x87\xab\x31\x0d\xf7\xc8\xf6\x71\x8e\x30\x32\xe5\xdf\xe2\x6a\x18\x1a\x73\xba\xb8\x19\xc2\x45\x10\xa0\x94\x5d\x14\x8b\x18\xce\xb4\x74\xb5\x45\xb3\xc2\xbc\xc5\xd5\x5a\x3c\xd2\x3d\xf1\x04\xce\x34\xe3\xfb\x65\xba\x35\x05\x3b\x2b\xca\x9f\xa9\xc0\x3e\x49\x92\x7a\xb6\x77\x91\x24\x1d\xb6\x3a\x23\x8b\x42\x46\x98\xaa\x21\xcb\x47\x53\xb0\xdb\x0d\x93\x10\x29\x97\x5c\xd4\x69\x9a\x1b\x57\xb4\xdb\x02\xc9\x74\xb2\xe6\xbc\xe6\x70\x97\xfb\xa2\xab\xb2\x25\x82\x2f\x68\x58\x98\xa8\xab\xc4\xc9\xcf\x4c\xd9\x27\x12\xce\xc8\x52\x0e\x8c\x76\x06\x8b\x78\x49\x04\x0e\x50\x05\xbf\x3c\x9c\x6c\xa5\xb7\xc8\xd2\xb8\x34\xf7\x9a\xe7\x29\x33\x33\x3f\x96\xdb\x08\xcc\xf8\x57\xf1\x50\x4b\xb0\xfd\xd8\x8a\x54\x84\x05\xbf\x6d\xa9\x69\x4a\xd2\x48\xa3\xad\x5c\xad\x95\xd0\x21\xf7\x65\x4f\x91\x59\x19\x34\x64\xc0\x79\xf3\xf1\x6f\xee\xaf\x75\x2b\xf6\x42\x8c\x50\xe1\x6e\x64\x67\xcb\x6c\x90\xdc\x0e\x94\x76\x65\x8a\x3e\x01\xa0\x56\x60\xb4\x2b\x58\xed\xcb\x9c\x28\xa0\x32\x8f\xd5\xfe\x43\x82\xfe\x50\x43\xb6\x10\xa5\x12\x7c\xd5\x99\x6e\x7e\x42\x6b\x27\xb4\x76\x5c\x51\x4e\x68\xad\xcb\x0d\x73\x42\x6b\x27\xb4\x76\xdf\xb2\x3d\x41\xb4\x56\xa3\x09\x02\x12\x45\x13\x12\xdc\xf5\x53\x11\xd5\xb0\xaa\x4f\xb7\xef\x34\x1e\xd0\x5f\x81\xfe\x0c\x14\xef\x8c\x35\xad\x45\xd1\xb5\xa0\x54\xf5\xfa\xc9\xf0\x2a\x33\x2d\xf7\xd9\xe3\xc8\x73\x9f\x40\x3a\xe1\x72\x8f\x83\xd4\xf4\x1a\xa9\x47\x82\x3a\x48\xfa\x52\x20\x79\x12\x48\xba\xc0\xe8\xa3\x20\xe9\x09\x0f\xb7\x8c\xc0\xda\x47\xd5\x9b\x9c\x79\x28\x91\x96\xad\xe3\xbe\x15\xf0\x5e\xce\xea\x88\x7f\x1f\x06\x97\xee\xb1\x37\x12\xfe\x9e\x4a\x05\xe4\x40\xc3\xbb\x30\x9f\x39\x06\xae\x79\x88\xb2\xcb\xd6\x57\xe0\xf6\x67\xb4\xbe\x82\x02\x1e\xdc\xfa\x9e\xe5\xb4\x57\x8e\x16\x0d\x22\x5a\x18\x02\x0f\x08\x19\x11\xd0\xdf\xea\x39\xc0\xd1\x92\xb5\x22\x41\xef\x74\x85\x1d\x36\xce\x22\xa7\x8f\x62\x9d\xa7\x45\xf9\x69\x51\x7e\x5c\x51\x4e\x8b\xf2\x2e\x37\xcc\x69\x51\x7e\x5a\x94\xdf\xb7\x6c\x4f\x70\x51\xfe\xd0\x50\x28\x4d\x66\x82\x84\x78\x28\x1a\x4a\x05\x03\xf7\x29\x70\xd3\xca\xd2\x58\x28\x81\x19\x5d\x20\xab\x81\xde\xdf\xa0\xfa\x64\x09\x38\xce\x87\x6c\xca\x45\x6c\x4a\x74\x1c\x2a\x79\xf9\x7e\x14\xe0\x74\xea\x71\x47\x77\x83\x9d\xb0\xeb\x09\xbb\x1e\x57\x94\x13\x76\xed\x72\xc3\x9c\xb0\xeb\x93\xc0\xae\xcd\x12\x1d\x40\xe9\x67\x4b\x04\x22\x10\x02\xce\xa4\x9e\x59\x29\xb3\x39\xc2\x0e\x13\x3d\xc1\xa8\xc0\x5e\x27\xad\x52\x18\x27\x0a\x14\x5f\x03\xbf\x3a\x4e\xda\x22\x56\xea\x32\xb0\x2b\x72\xfa\x33\x7a\x68\x8b\x1a\x38\x92\x8b\x56\x60\x88\x4c\x51\x12\xc9\x81\x86\x7e\xb9\x75\xc9\x5e\x13\x4d\x93\x90\x28\x04\xb2\x94\x90\x23\x03\xa9\xc4\xd0\x2d\x4e\xea\xd8\xab\xa6\x71\xf1\x65\x74\xb9\xa1\xd0\x6d\xab\xdd\xe6\xf7\xe7\xb4\xdd\x6d\x3d\x74\xc0\x82\xcd\x3a\xa5\x89\x0d\xeb\x0f\x5b\x5b\xb1\x26\xf2\xb4\xec\xb8\xc4\xf1\x4f\x6c\xc9\x25\x4d\x1c\xc7\x96\xe7\x18\xc5\x79\xf3\x3d\x20\x09\x37\xc4\x24\xe2\x2b\x0c\x41\xd3\x80\x60\x4e\x84\xda\x61\xb0\x36\xcb\xf5\x9f\x18\xc5\x97\xe5\x92\x5d\xb3\xd4\x12\xab\x8f\x62\xa2\xdb\x3d\xbe\x4a\xd8\x6c\xfb\xa1\xa2\x51\x84\x02\xe4\x9c\xa7\x51\x08\x13\x04\xca\xa4\x22\x51\x84\x21\x70\xd6\x19\xf4\x9d\x90\xe0\x8e\xcc\x30\x53\x6d\x1d\x20\xbe\x25\x98\x1e\x14\x3b\x23\x50\xd9\xc6\x2b\x9b\x48\x97\x81\x6b\x12\x3f\xd2\x12\xe1\xe4\xcc\x3a\x39\xb3\x4e\xce\xac\xc7\x96\xe5\xe4\xcc\xea\xb2\x40\x3f\xa6\x33\xeb\x14\x16\x3a\x7a\x58\xa8\x76\x26\xf1\x05\xa4\x8c\x7e\x4b\x11\x68\x08\x8a\x03\x65\x21\x0d\xf4\xaa\x4f\xcd\xa9\x7c\xdc\xc4\xe2\x3a\xb0\xe6\x94\xf3\xfd\x13\xe4\x7c\xbb\x25\x02\x9c\x71\x01\x02\xdd\xaf\x5f\x72\x8b\xb7\xaf\xec\xa3\xb6\xce\xa5\x2e\x3c\x41\xbb\xc7\x2f\x0d\x14\x5d\x20\x50\x73\x78\x86\x41\xb6\x73\x22\x81\x44\x02\x49\xb8\x82\x09\x22\xdb\x2c\x03\x97\x54\xcd\xed\x89\x1b\x7a\x04\x2a\xb9\xde\xcb\xcb\xc1\xa1\xad\xff\x49\xac\x07\xcb\xbc\xfe\x8c\x3e\x8b\xb2\x0e\x8e\xe3\xad\xb0\xcb\xc3\x82\xbb\xad\xa9\xdd\x3b\x52\x7e\x0b\xbd\xc9\x52\xd5\x3f\x6e\x95\xec\x9a\x81\x96\x58\xfd\x19\xed\xb3\xa4\x82\xe3\x98\xe7\xe6\x08\xa8\x83\x53\xad\xdc\xa7\x40\x37\xb9\x46\x40\x26\x3c\x55\x40\x12\x0a\x12\xc5\x62\x5f\xae\xd5\x67\x4b\xe1\xe9\x24\x59\x39\x86\x1b\x59\x6b\x93\xc6\x5a\x9f\x76\x95\x63\x6d\x73\xde\x54\x79\xf3\x42\xe1\xf7\xc5\xdb\xd1\x28\xc1\x20\xdf\xb0\xd9\xbc\xce\x27\xbf\x63\xb0\x99\xbe\x34\x4a\x4f\x50\x28\x5a\xd2\x74\x2f\xe7\xe9\x2f\x37\x41\xfd\x0d\x16\x7e\x77\x7f\xe1\x90\xb2\x5c\x50\x41\x71\x98\xa4\x34\x0a\xf3\xf1\xed\x5e\xa5\x4a\x19\x0f\x71\x9c\x70\x1e\x95\xd9\xdb\x81\xec\x37\x75\x5e\xf3\x10\xe1\x86\xf3\xc8\xb8\xbe\xaa\x6b\x20\x61\x38\x0e\x78\xca\x94\xaf\x06\xca\x14\x96\x1d\x85\x3d\x6b\xce\xee\xf5\x7f\xbe\xf4\xd4\x9f\xc6\x13\x7b\x9a\x14\x65\x81\x40\x22\x11\x26\xab\x6a\x2e\x04\xc6\x7c\x81\x0f\xc6\x08\x5b\x73\x12\x62\x15\x27\x95\x03\xc8\x4e\xe3\xfb\xfc\xfe\x0b\x11\xd8\xd6\xfe\xb4\xf2\x99\xd9\x42\xe5\x91\x99\x08\x41\x8a\xe3\x76\x8f\x2a\x8c\xcb\xe5\x0f\xb1\x57\xcb\xf9\x7b\x12\xcc\x29\xb3\x02\xf8\xe0\xfc\x46\x7f\xae\xb4\x84\xe5\x9c\x06\x73\x58\x22\x2c\x09\x33\x49\x09\x24\x34\x6b\xa9\xbd\x86\xec\x1a\xf8\x41\x85\x2d\x37\x98\x95\xf4\xd6\xd4\x7c\x5f\xf2\x5a\x39\x60\x2a\x78\xec\x11\xba\x96\x2d\xf9\x58\x6b\x61\x4b\xf3\x32\xe8\xaa\x3b\x4a\xe8\xc5\x96\xfe\xd8\xb8\x58\x46\xa3\x7f\x3a\x17\xcb\x3e\x91\x0a\xdb\x1a\xdd\x58\x7c\xf1\x76\x64\x30\x29\x0b\xf0\x8d\xe0\x69\xd2\x46\x1e\x87\x69\x9a\xc9\xc3\x72\xfe\x96\x99\xe1\xa4\x7a\xc6\xb2\xf4\x0e\xaf\x23\x93\x12\x74\x69\x38\x1b\x29\xc2\x42\x22\xc2\xf1\xd5\xcb\xf1\xe2\xe5\x73\x40\x15\xf4\x7f\xa9\xae\x32\xa6\x6c\xfc\x2d\x25\x4c\x51\xb5\x7a\x80\x91\xee\x3d\x65\x34\x4e\x63\x70\x23\x1e\x9f\x5a\xa8\xcd\x02\x94\x70\xe6\xbc\x2d\x66\x02\xfa\x13\x05\xf7\xb1\x48\xfe\x78\x50\x16\xc9\x1f\xcd\x58\x7c\x56\x62\xb5\xa2\x39\x4c\x5b\x4b\xb0\x9e\x24\x20\xb6\x79\x08\x0b\xab\x2a\xeb\xed\x30\xe7\x2f\xd6\x9c\xbf\x8c\xae\x88\x22\x97\xc8\x4a\x87\x5d\x1e\x6a\xcb\x2e\x64\xd0\xc4\xd2\xbe\x98\x11\xc8\x12\x80\xb3\x54\x9e\x23\x91\xea\xfc\xd7\x9d\x36\x46\x16\x84\x46\x64\x42\x23\xaa\x56\xe3\x3f\x39\xbb\x8f\x21\xb7\xa6\x0b\xa8\xcc\x78\x9e\x15\x30\xac\xe4\x84\x98\x3c\x87\xec\xef\x97\x81\xf9\x7b\x89\xfa\xef\x70\x5b\x3a\x7f\xdb\xdb\x7a\x74\x3b\x81\x6b\xa8\x3a\xed\x7a\x6f\xc3\xd4\x7d\x0d\x21\xf1\x5f\xfa\x11\x11\x33\x3c\x0d\x1e\x3f\xce\xe0\x71\x23\xdc\x41\xb6\xa9\xc0\x70\x58\xea\x57\x07\x5b\xda\x22\x09\xc6\x34\x6c\x3c\x25\x7e\xbe\xb9\x04\x1a\x3e\x87\x49\x44\xd8\x9d\x99\xeb\xf5\xff\x5f\xf5\x1a\x88\x28\x04\xce\xd0\x3c\x58\xf1\xf4\x6b\xef\x39\x4c\xa9\x49\x5c\xa0\x53\xfd\xc0\xe4\xdc\xfe\xfd\x5f\x1f\x34\x8d\xea\x56\x97\x18\xa4\x42\x8f\x36\x46\x87\x4d\xd9\x1c\x39\x2a\xbb\xa6\x6c\x4a\xe2\xb1\xe0\x11\x8e\x89\x68\x36\xa0\x1a\xdf\xf2\xc5\x7b\xd0\x44\x8c\xc4\xf9\x24\xe3\x33\x22\xd8\x2f\x59\x3b\x4a\xc9\x03\x6a\x16\xed\x61\x58\xcb\x92\xfe\xc1\x05\x2c\xe7\xc8\x40\xf2\xd8\x84\x15\xd8\x4c\x1a\xdd\x65\xbe\x59\xab\xeb\xb0\x68\x3c\x6f\x90\xa1\xa0\xc1\xda\x8b\x97\xb9\x33\xb9\xa4\x8a\x8b\x55\x1b\x93\xb1\x87\x56\x37\x99\x74\x36\xf9\xd7\x9f\x6e\xdf\x6d\xd4\x64\xbc\xcd\x02\x13\xee\x59\xae\x36\xc5\x6c\xf9\x0a\x35\x79\xeb\xa9\xde\x83\x40\x4b\xee\x8a\x0a\x5f\x4b\x0b\xd5\xcd\xa8\x1a\x6f\xbb\x8e\x0e\x33\x33\x45\x66\xc0\x99\x05\xa1\xd4\xea\xcd\xb5\x69\xa5\xf6\x74\x95\x01\x8f\x63\xda\x02\xc7\x13\x39\x5f\xe3\x5e\xaa\xc0\x91\xf3\x56\xa7\x04\xe2\x58\x2a\xa2\x9a\x36\x1b\xaa\xb9\x1e\x19\x05\x30\xae\x4c\xad\x9a\x22\x2c\x89\x84\x20\x42\xc2\x6c\x77\x98\xa4\x34\xf2\x30\x61\xfc\x20\xe3\xb0\x29\x03\x57\x66\xe8\x9a\x5a\x77\x8a\x47\x4c\xde\xaa\x1d\x9d\x55\xe9\x4a\x66\xdc\xa6\x83\x2a\xae\xf5\x9a\xd0\xc8\xe3\x52\x71\x2f\x45\xa3\xfa\x2e\xdd\xc7\xa6\xaa\x6a\xfa\x49\x44\x94\xb6\xf1\x46\xf4\x6f\xdc\xc7\x40\x95\x6d\x26\x5b\x9f\x4d\x1e\x18\x80\x48\x19\xa3\x4c\x9b\xed\xbe\xde\x57\xe5\x0a\x2b\xe6\x6f\xb7\xe8\x7d\xc5\xcc\xa8\xa6\xbd\xc1\x9f\x2f\xe5\x9d\xc5\x4a\x89\x4b\xed\x6a\xf6\xa5\x33\xf9\x5c\x24\x8d\x17\x09\xde\x6c\xa3\x5a\xd3\x96\xfe\x3a\x28\xba\x27\x53\x69\xe7\x46\x33\x61\x69\x7b\xd8\xf2\x75\xec\x32\x83\xf2\x91\x33\xc7\xf0\x02\x34\xdc\x42\xe4\xe9\x71\x59\x96\x47\x53\x27\xf1\x4d\x55\x9a\x48\xce\x51\x7b\x40\x7a\x88\x67\xc9\xb7\x6c\xe1\xc1\xf6\x6d\xbb\xc8\xb3\x78\xf1\x65\x04\xf9\x52\xd5\x5c\x94\x12\xef\x77\xf0\x51\xcb\xb5\xef\xb7\x76\xcd\x8e\x4c\x30\xa0\x53\x77\x71\xc5\x57\x56\xa4\x60\x41\xb8\xd9\x95\xf2\xdf\xf0\x97\xff\xaa\xe6\xd7\xa5\xa8\xb4\x67\x38\xe7\x0e\xae\x9e\x12\x5c\x0a\x44\xe3\x36\xba\xcc\x08\x78\x66\x0d\xf7\x3a\x1f\xaa\x6a\x32\x80\x6f\x9f\x96\xd5\xa2\xef\xf2\x2d\x71\x33\x0a\x13\xce\x35\x3a\xf0\x2d\x00\x2b\x5f\x6f\x7a\x36\x91\x36\x65\x87\x80\x4c\xcd\x28\x37\x4d\xa3\x2c\x49\xa4\x89\xd0\xe5\x00\x4e\x1b\x87\x7e\xd2\x78\xf1\xe3\x4b\xb2\xf4\x78\x2e\x6d\xae\x63\xd3\x8a\x2a\x33\x20\x3d\x63\x5f\x96\x88\xd8\xb4\x2e\x4f\x7a\xa2\x67\x0a\x2e\x65\x09\x36\x9e\x80\xfd\xb9\x83\x47\x99\x13\x2f\xb7\x07\x80\x47\x5b\xcd\x79\xf2\xc3\x7c\x28\x64\x9d\xa3\xd5\x78\x75\x5d\xce\xdc\x6a\xd0\x29\xdd\x18\x74\x85\x8a\xd0\x68\xa8\x30\x6e\xa3\xb8\x86\xb2\x6c\xe4\xd8\x1d\xa3\x6d\x0a\x51\x2a\xae\xde\xf1\x74\x0a\x73\x5b\xd2\x38\x46\x29\xc9\xac\x59\x5d\x17\x61\x68\x26\x17\x12\x55\x64\x33\x14\x6f\x64\xda\xcb\xce\xe6\x82\xa6\xd6\xc8\x2c\x77\xd7\x93\x59\x55\x99\xab\x9e\x6a\x05\x14\x2d\xbf\xcd\xe7\x53\xfb\x68\x64\xa9\xf8\x6d\x79\x9f\x5a\x0e\xb4\xe7\x93\x25\x77\xca\x92\x9f\xa6\x11\x8d\xca\x5c\xfb\x14\xb7\x9d\xe1\xdd\x1b\x7d\xbc\xf8\xf8\x69\x34\xfe\x74\x3d\xba\x79\x7d\x39\xfc\xc7\xf0\xf5\x55\x3e\x21\xe9\xe6\xf6\xc3\xe7\xe1\x68\xf8\xe1\x7a\x78\xfd\x26\xff\xfc\xf6\xd3\xf5\xd6\xa3\xd7\x97\x1f\xae\x2f\x87\xef\x4a\x8f\x47\x1f\x3f\xdc\xdc\x94\x9e\xbd\xbe\xbd\xfd\x70\x9b\x7f\x70\xf5\xfa\xcd\xed\xc5\xd5\xeb\xab\x4c\x05\xeb\x8c\xaf\x7c\x3e\xf8\x0e\x4e\x37\xda\x3d\x87\xed\x62\xaf\xe0\x9a\x2b\x90\xa8\xbe\x32\x38\x87\xbc\x48\xaf\xc0\xe0\x91\xdc\x13\xd3\x34\xb8\x4e\x05\x2f\x2e\x17\xa9\x84\x09\xea\x89\xde\xb9\x6d\xfb\x86\xa0\xd3\x85\xa5\xe5\x7e\xec\x24\x33\x27\xd2\x26\xe5\x3a\x32\xf6\xa2\x3b\x09\xd3\x34\x8a\x56\x90\x4a\x32\x89\xd0\x91\xde\xe8\xd4\x91\xdf\x3c\xa8\xa8\x82\x28\xeb\x68\x5e\x72\x71\xa7\x09\x12\x93\x17\x1c\xad\x1c\xd7\x21\x67\x98\xb9\x1f\x1d\x2f\xcf\x35\x62\x9e\x03\x91\x6e\xb9\x9b\xa1\x98\x98\x18\x4e\x8d\x1b\x2f\x44\x90\x7c\xaa\xf4\xc2\xc8\x72\x95\x35\xa9\x65\x29\xfb\x55\x4f\x73\x76\x57\x6a\x68\xe8\x18\x33\xb0\x44\xcc\x9f\x3b\x29\xc4\x64\x65\x76\x1a\x32\xab\x1f\x43\x20\x33\x1b\x4b\x23\xfb\xb5\x93\x8c\x4b\x71\x34\xfb\xb8\x85\x51\x90\x56\x08\x07\x81\x52\x71\x81\xa6\x0d\x60\x9a\xb2\xc0\x8e\x28\x54\xad\xf6\x23\xb9\x8a\xbc\x87\x36\x43\x7a\xc4\x83\xb2\xb3\xba\xfe\x60\x68\x16\x0d\x66\xd3\xfa\x56\x00\xb4\x3c\xd6\x75\x3e\xd7\x2d\x8b\xad\xd9\x18\xd2\x83\x65\x09\xd5\xca\x5b\xc9\x11\xf2\x84\xb7\x4b\x51\xc3\x26\xa3\x79\x45\xd0\xb0\x8d\x21\x85\x44\x91\x71\x50\xce\x55\xa8\xad\x89\xaa\x94\x87\xdd\xfe\x97\xc7\x31\xb9\x3a\xce\xa9\x66\x06\x27\x50\xf2\x54\x04\xdb\xd9\x11\x07\xa9\xab\x22\xc8\x5b\xcd\xe4\xdf\xff\xf5\x01\xac\xa5\x76\xc7\xfc\x3d\xf9\x10\x8f\x6e\xfe\xc7\xf2\x12\xfb\x6f\x3f\x5d\x1f\x8a\xef\x8d\xc2\xb4\xf5\x09\x17\x14\x90\x39\x88\xf7\xb8\x3d\xb3\x4a\x8b\xbe\xcf\x27\xed\x73\xf4\xab\xe1\xd8\x61\x83\xb5\xb2\xcf\x21\x48\x85\x40\xa6\xa2\x95\xf5\x3c\x6a\xb0\xb5\x94\x1a\x2f\xc5\x84\x78\xfa\xf3\xdd\x5f\x65\xeb\x00\xf2\x62\x13\x7c\x7c\x9b\x4e\x50\x30\x54\xe8\x73\xbd\xb7\x08\x00\x54\xce\x44\x07\xf8\xde\x5b\x07\x03\xea\xc2\xac\xca\x7a\x0e\x71\xe2\xef\xab\x68\x9f\x1f\x7f\x4e\x67\xf3\x71\x3e\xa7\xed\x61\x3c\xdc\xdb\x61\xf5\x1c\xb2\xfe\xe7\x85\x67\xf5\x8e\x4a\xaf\x04\xc6\x53\x32\x11\x34\x68\x6c\x73\xf6\x73\x37\x0a\x96\x82\xd0\x8d\xfa\x74\x67\xe3\x08\x7e\x2d\x2f\x89\xcc\x4f\x00\x30\x59\x15\x36\x09\x7b\xc6\x5b\x87\x35\x5a\x7a\x13\x8c\x8b\xc8\xdf\x3c\xa1\xf1\x88\x96\x9d\x09\x19\x67\x90\x6d\x29\x6a\xdb\x68\xf7\xb3\xbf\x21\xe0\x4c\x09\x1e\x8d\x93\x88\xb0\x07\x4e\xfe\x7f\x98\x9d\x0e\x01\x8f\x13\x41\x25\xee\x07\x93\xba\xeb\xa1\xf8\xb1\x65\x24\x09\x1d\x23\x0b\x13\x4e\x1b\x87\x9e\xa8\xcc\x9d\x23\x44\x60\x41\xa2\x14\x21\xa2\x77\x08\x34\x79\x95\x70\xa1\x5c\x90\xde\xed\x77\x26\xb0\xa0\x42\xa5\x24\x82\xe1\xcd\x40\xbf\xfe\xca\x6e\x88\x94\xba\x4b\xda\x20\x06\xe0\x1f\x0a\x05\x23\x11\x04\xa9\x54\x3c\x46\x21\xdd\xd0\x45\x26\x11\xba\x54\x9d\x38\x65\x6e\xa7\xbf\xcf\xb1\x5c\xb7\x8f\x54\x5c\x0b\xdb\xbd\x81\xed\xd2\xe8\x37\x3f\x3a\x64\x3b\xc7\xf9\xca\x87\x66\xab\x3d\xa1\xf5\xb2\x36\x0b\xde\xcd\xe6\x21\x9f\xca\x13\xbe\xba\xa7\x5d\x1b\x7e\x46\x58\x6f\xf6\xcc\x45\xa1\x3d\x29\xd1\x2d\xbc\xdd\x06\x8f\x3a\x02\x12\x96\x28\xd0\x1e\xf5\xdf\x40\xbf\xe5\x3c\xd3\xa3\xe3\xeb\xfc\x26\x1d\x7b\x60\x41\x8c\xcc\x33\xb9\xea\xb2\x32\x21\xc1\xfd\xd4\x6a\x28\xd9\xed\x80\xba\x5a\xf3\x9c\x24\x49\xe4\xf0\xec\x8e\xe0\x68\xc2\xeb\xcd\xef\xfb\x92\x7a\xf7\xf3\xb9\xc9\xb5\xdd\x95\x33\x1a\x94\x5a\xb2\x99\x4e\x6c\x5d\xcc\xbb\x49\xb4\xcd\x3a\x66\xbb\x9e\x8c\x5a\x75\x55\x7a\x46\x68\x36\x10\x99\x9a\x88\x40\xd7\x3d\xed\xf5\x18\x67\x0c\xa5\xc2\x10\x56\x24\x8e\xe0\xdc\xbc\xfa\x6c\xaa\xe8\x9b\x27\x1a\xa1\x20\x53\xd2\x93\x56\x65\x18\x1e\x27\x64\x15\x71\x72\x50\xe8\x2d\x37\x9a\xac\x14\xee\x5a\xd1\x5b\xda\xba\x1f\x64\xa7\x79\x9c\x99\xf3\x46\xa9\x98\x91\x24\xc1\x10\x24\x8f\x52\x23\x8b\xd9\x1a\x52\xb5\xa7\x61\x7f\xcf\x57\x5b\xf7\x8c\x75\x6f\x60\x1d\x96\x62\x08\x36\x72\x21\x57\x52\x03\xe2\x5d\x88\xfb\x31\xf1\x56\x1e\xa4\xef\x47\x5a\xef\xca\xb7\xd6\xb5\x69\xbb\x1f\xae\xdd\xda\xae\x94\x72\xc9\x21\x8d\xf4\xba\xe7\x42\x99\xee\x69\xfa\x92\xb0\x32\xac\x73\x69\xab\x1e\x54\xe7\x46\xda\xe3\x6c\xff\x23\xeb\x91\xde\x6e\x82\x49\xb8\x94\x54\x83\x72\x41\x67\x73\x05\x8c\x2f\x9b\x35\x5b\xe1\x88\x8a\xee\x35\xd2\x70\x9a\x83\x86\x4b\x22\xe1\xc3\xdb\x9d\x8d\x33\xa6\x95\x1b\x56\x60\x17\xb6\xd8\xb7\xef\xa5\x9a\xb3\x6c\x2b\xc3\x70\xa7\xbf\x76\x3b\xc8\x6e\x6a\x31\xa9\x6f\x99\x3f\xb2\x00\xf2\x77\xb4\x56\xd5\x01\x45\x6d\xdc\x09\xd5\xe3\x46\xbd\x7d\x15\x99\x77\x7f\xd7\x29\xbd\xbe\x0c\xc8\xf5\x91\xb9\xb3\x86\xb5\xfb\xcf\xd1\x3d\x00\xd6\x1d\x70\x8e\x4b\x09\xe9\x7b\x54\x62\xd0\xc6\x08\x95\xa2\x6c\xf6\x00\x6e\xe5\xa3\xe4\x95\x37\x8f\x5a\xdb\x38\xfa\x5e\x5e\xba\xbf\x17\xe0\x89\x04\x7e\xaa\x4f\x70\xeb\xde\x80\xfe\x64\x17\xfc\x9b\x90\xd1\x3b\x32\xc1\xe8\x28\xeb\xfd\xfc\x61\x1c\x04\x22\xc3\x87\x7f\xdd\xd7\x3c\x50\x66\xfc\x88\x95\x75\xd4\xd5\xd6\xcd\x76\xbf\x3e\x20\xaf\xae\xea\xcc\xd4\xd2\x69\xa9\x5b\xe7\xa4\x96\x4e\x48\xad\xcc\x82\x2b\x9d\x8a\xba\x8f\xff\xe2\x61\x6b\xc7\x8e\xa8\xbb\x09\x6f\x00\x6e\x06\x85\xec\xd0\xf9\x43\x56\x05\x0f\x3d\xbb\xb7\xf3\x2c\x5d\x6f\xbc\x49\xfe\xaa\xa9\xa7\x6a\x1a\x37\x1d\x25\xcc\x97\x70\x46\xa7\xeb\xd0\x95\xb3\x99\x5f\xec\x5e\x6d\xcb\xcb\xd9\xb7\x94\xac\xfa\x94\x0f\x24\x8f\x71\x96\xae\xdc\x51\x8d\x9e\x69\xe3\x9e\x76\xc9\xda\x3a\xcc\x1d\x16\xf6\xe8\x2f\x7b\xd2\xe3\x60\x7d\x7f\x95\xe2\x70\xb6\x78\xd9\xff\xf5\xd7\xfe\x8b\x2d\x8f\xc6\xb6\x39\x8c\x97\x34\xf4\xea\xe8\x3e\xd6\xad\x4e\x57\xeb\xfb\x5d\xce\x75\x85\xee\xe9\xdf\xbe\xb2\x91\x6d\x4f\xaa\x60\x4e\x16\x58\x2c\x44\xc2\x98\x32\x48\x04\x5d\xd0\x08\x67\x28\xff\xe6\x41\x2f\xba\xd8\x78\x6d\x67\xc7\x58\x8d\xad\xcd\xd4\xe5\x8d\x52\x95\x0f\xc3\xb8\x48\x89\x15\xc7\x1b\xce\x3f\x21\xc1\x13\x12\x2c\x71\x78\x4f\x48\xb0\xf2\xa8\xd4\x13\x10\xbc\x37\x20\xe8\xbb\xa5\xeb\x18\xf8\x20\x9b\xa9\xfd\xc1\x86\x2e\x66\x8d\xb6\xd1\x74\xb7\xcd\xf9\xfe\xf6\xd1\xfa\x6f\xd0\xfa\x81\xed\xec\xde\x13\xe2\xdb\x69\xfb\xe7\xb1\xb5\xf2\x9d\x99\x2d\x64\xee\xfe\x3c\x7e\xc2\x5e\x65\x5e\xba\x71\x2e\x48\xeb\xb8\x78\xe6\x50\xd7\x35\x2f\x31\xbf\x2b\x8b\x7b\x16\x13\x4f\x04\xd2\x55\x5d\xeb\xfb\xe3\x0f\x4b\xdb\xd9\x78\x2d\x64\x4e\x25\x8a\x56\x7e\xb7\x8c\x80\xff\x60\xdf\x9c\x5d\x3d\xe0\xf1\xc1\xf9\x25\x13\xf7\x67\xab\xb4\x38\x15\xd2\x24\x52\x70\x51\x93\x87\x06\x07\x5a\x54\xdc\x4f\x73\xf7\x57\xb9\xee\xbe\xeb\xf3\xf1\x6c\xbe\x2b\x98\x7c\xd7\x3e\x98\x74\x47\xb3\xa3\x92\x4a\xe0\x2c\x5a\x01\xc9\xb6\x5a\xd2\xa9\x35\xbc\x29\xc5\xc8\xec\x06\x75\x6e\xbe\x7e\x35\xcf\xc6\xa9\xf9\x98\x79\x0e\x65\xdf\x71\x8e\x8c\xc7\xc5\xa0\x75\x62\xd9\x5c\xab\x23\x76\x89\xa6\xb5\x4f\xdc\x28\xec\x2a\x70\xd7\xee\x66\xcf\x8c\x22\x9d\x17\x74\x7d\x6b\x40\x96\xfd\x79\xc5\x83\xdc\xb5\x01\xa5\xd6\x7a\xcf\x05\xba\xfd\xe1\x19\x2a\x7c\x6f\x25\x85\x8b\x9b\xa1\xd3\x9b\x3b\x5d\xa3\x37\x57\x2a\x91\xaf\x06\x83\x19\x55\xf3\x74\xd2\x0f\x78\x3c\x90\x24\x96\x29\x9b\x9d\x07\x2c\x50\x99\xae\xce\x9d\xae\xce\x49\x42\x35\x53\xdf\x9f\x7d\x7f\xf6\xff\x01\x00\x00\xff\xff\xa6\x6c\x1f\xfc\xb8\xac\x00\x00")

func apiSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_apiSwaggerJson,
		"api.swagger.json",
	)
}

func apiSwaggerJson() (*asset, error) {
	bytes, err := apiSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api.swagger.json", size: 44216, mode: os.FileMode(420), modTime: time.Unix(1539675835, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"api.swagger.json": apiSwaggerJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"api.swagger.json": &bintree{apiSwaggerJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
