{
  "swagger": "2.0",
  "info": {
    "title": "Cluster Manager API",
    "version": "v0.2.0",
    "contact": {
      "name": "Samsung CNCT",
      "url": "https://github.com/samsung-cnct/cluster-manager-api",
      "email": "admin@samsung-cnct.io"
    }
  },
  "schemes": [
    "https",
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/cluster": {
      "get": {
        "summary": "Will retrieve the status of a cluster and its kubeconfig for connectivity",
        "operationId": "GetCluster",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiGetClusterReply"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Name of the cluster to be looked up.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aws.secret_key_id",
            "description": "The SecretKeyId for API Access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aws.secret_access_key",
            "description": "The SecretAccessKey for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aws.region",
            "description": "The Region for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "azure.app_id",
            "description": "The AppId for API Access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "azure.tenant",
            "description": "The Tenant for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "azure.password",
            "description": "The Password for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "azure.subscription_id",
            "description": "The Subscription for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "provider",
            "description": "Name of the providers (aws/azure/vmware/etc).",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "undefined",
              "aws",
              "azure",
              "vmware"
            ],
            "default": "undefined"
          }
        ],
        "tags": [
          "Cluster"
        ]
      },
      "delete": {
        "summary": "Will delete a cluster",
        "operationId": "DeleteCluster",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiDeleteClusterReply"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "What is the cluster's name to destroy.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aws.secret_key_id",
            "description": "The SecretKeyId for API Access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aws.secret_access_key",
            "description": "The SecretAccessKey for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aws.region",
            "description": "The Region for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "azure.app_id",
            "description": "The AppId for API Access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "azure.tenant",
            "description": "The Tenant for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "azure.password",
            "description": "The Password for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "azure.subscription_id",
            "description": "The Subscription for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "provider",
            "description": "Name of the providers (aws/azure/vmware/etc).",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "undefined",
              "aws",
              "azure",
              "vmware"
            ],
            "default": "undefined"
          },
          {
            "name": "callback.url",
            "description": "The URL to call back to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callback.request_id",
            "description": "The ID of the request.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      },
      "post": {
        "summary": "Will provision a cluster",
        "operationId": "CreateCluster",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiCreateClusterReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiCreateClusterMsg"
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      },
      "put": {
        "summary": "Will adjust a provision a cluster",
        "operationId": "AdjustClusterNodes",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiAdjustClusterReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiAdjustClusterMsg"
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/api/v1/cluster/list": {
      "get": {
        "summary": "Will retrieve a list of clusters",
        "operationId": "GetClusterList",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiGetClusterListReply"
            }
          }
        },
        "parameters": [
          {
            "name": "aws.secret_key_id",
            "description": "The SecretKeyId for API Access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aws.secret_access_key",
            "description": "The SecretAccessKey for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aws.region",
            "description": "The Region for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "azure.app_id",
            "description": "The AppId for API Access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "azure.tenant",
            "description": "The Tenant for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "azure.password",
            "description": "The Password for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "azure.subscription_id",
            "description": "The Subscription for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "provider",
            "description": "Name of the providers (aws/azure/vmware/etc).",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "undefined",
              "aws",
              "azure",
              "vmware"
            ],
            "default": "undefined"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/api/v1/cluster/upgrade": {
      "get": {
        "summary": "Will return upgrade options for a given cluster",
        "operationId": "GetUpgradeClusterInformation",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiGetUpgradeClusterInformationReply"
            }
          }
        },
        "parameters": [
          {
            "name": "provider",
            "description": "Name of the providers (aws/azure/vmware/etc).",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "undefined",
              "aws",
              "azure",
              "vmware"
            ],
            "default": "undefined"
          },
          {
            "name": "aws.secret_key_id",
            "description": "The SecretKeyId for API Access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aws.secret_access_key",
            "description": "The SecretAccessKey for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aws.region",
            "description": "The Region for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "azure.app_id",
            "description": "The AppId for API Access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "azure.tenant",
            "description": "The Tenant for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "azure.password",
            "description": "The Password for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "azure.subscription_id",
            "description": "The Subscription for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "What is the cluster that we are considering for upgrade.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      },
      "put": {
        "summary": "Will attempt to upgrade a cluster",
        "operationId": "UpgradeCluster",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiUpgradeClusterReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiUpgradeClusterMsg"
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/api/v1/credentials/aws": {
      "put": {
        "summary": "Will update aws credentials used for a cluster",
        "operationId": "UpdateAWSCredentials",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiUpdateAWSCredentialsReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiUpdateAWSCredentialsMsg"
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/api/v1/credentials/azure": {
      "put": {
        "summary": "Will update azure credentials used for a cluster",
        "operationId": "UpdateAzureCredentials",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiUpdateAzureCredentialsReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiUpdateAzureCredentialsMsg"
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/api/v1/helm": {
      "delete": {
        "summary": "Will delete deployed helm chart",
        "operationId": "DeleteHelmChart",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiDeleteHelmChartReply"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster tiller should be installed on.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "package_manager",
            "description": "What tiller should be used.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "chart",
            "description": "Chart Name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aws.secret_key_id",
            "description": "The SecretKeyId for API Access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aws.secret_access_key",
            "description": "The SecretAccessKey for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aws.region",
            "description": "The Region for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "azure.app_id",
            "description": "The AppId for API Access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "azure.tenant",
            "description": "The Tenant for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "azure.password",
            "description": "The Password for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "azure.subscription_id",
            "description": "The Subscription for API access.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "provider",
            "description": "Name of the providers (aws/azure/vmware/etc).",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "undefined",
              "aws",
              "azure",
              "vmware"
            ],
            "default": "undefined"
          },
          {
            "name": "request_id",
            "description": "A unique id to indicate this request.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callback.url",
            "description": "The URL to call back to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callback.request_id",
            "description": "The ID of the request.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      },
      "post": {
        "summary": "Will install (or reinstall) helm chart\nThis will be destructive if a chart has already been deployed with the same name",
        "operationId": "InstallHelmChart",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiInstallHelmChartReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiInstallHelmChartMsg"
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/api/v1/tiller": {
      "post": {
        "summary": "Will install (or reinstall) tiller",
        "operationId": "ProvisionTiller",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiProvisionTillerReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiProvisionTillerMsg"
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/api/v1/version": {
      "get": {
        "summary": "Will return version information about api server",
        "operationId": "GetVersionInformation",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiGetVersionReply"
            }
          }
        },
        "tags": [
          "Cluster"
        ]
      }
    }
  },
  "definitions": {
    "AdjustClusterMsgAdjustClusterAKSSpec": {
      "type": "object",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/cluster_manager_apiAzureCredentials",
          "title": "Credentials to build the cluster"
        },
        "node_pool": {
          "type": "string",
          "title": "Node Pool Name"
        },
        "add_count": {
          "type": "integer",
          "format": "int32",
          "title": "umber to increase by"
        },
        "remove_count": {
          "type": "integer",
          "format": "int32",
          "title": "number to decrease by"
        }
      }
    },
    "AdjustClusterMsgAdjustClusterVMWareSpec": {
      "type": "object",
      "properties": {
        "add_nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cluster_manager_apiVMWareMachineSpec"
          },
          "title": "Machines which we want to add to the cluster"
        },
        "remove_nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdjustClusterMsgVMWareRemoveMachineSpec"
          },
          "title": "Machines which we want to remove from the cluster"
        }
      }
    },
    "AdjustClusterMsgVMWareRemoveMachineSpec": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "title": "The host for SSH access"
        }
      }
    },
    "CreateClusterAKSSpecAKSInstanceGroup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the group"
        },
        "type": {
          "type": "string",
          "title": "Instance type (Standard_D2_v2, etc.)"
        },
        "min_quantity": {
          "type": "integer",
          "format": "int32",
          "title": "Minimum number of instances (defaults to zero)"
        },
        "max_quantity": {
          "type": "integer",
          "format": "int32",
          "title": "Maximum number of instances (defaults to zero)"
        }
      },
      "title": "Instance groups define a type and number of instances"
    },
    "CreateClusterAWSSpecAWSDataCenter": {
      "type": "object",
      "properties": {
        "region": {
          "type": "string",
          "title": "Which region (us-east-1, etc.)"
        },
        "availability_zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Which availability zones (us-east-1b, us-east-2c, us-west-2d, etc.)"
        }
      },
      "title": "Which Data Center"
    },
    "CreateClusterAWSSpecAWSInstanceGroup": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "Instance type (m5.large, etc.)"
        },
        "min_quantity": {
          "type": "integer",
          "format": "int32",
          "title": "Minimum number of instances (defaults to zero)"
        },
        "max_quantity": {
          "type": "integer",
          "format": "int32",
          "title": "Maximum number of instances (defaults to zero)"
        }
      },
      "title": "Instance groups define a type and number of instances"
    },
    "CreateClusterAWSSpecAWSPreconfiguredItems": {
      "type": "object",
      "properties": {
        "vpc_id": {
          "type": "string",
          "title": "The VPC id, blank for for \"create one for you\", filled if you are BYO VPC"
        },
        "security_group_id": {
          "type": "string",
          "title": "Security group"
        },
        "iam_role_arn": {
          "type": "string",
          "title": "The IAM role for the cluster (arn)ClusterAssociationdd"
        }
      },
      "title": "For when some things are already created"
    },
    "GenericHelmChartChartRepository": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "What is the URL for the chart repo"
        },
        "name": {
          "type": "string",
          "title": "What is the repo name"
        }
      }
    },
    "GetVersionReplyVersionInformation": {
      "type": "object",
      "properties": {
        "git_version": {
          "type": "string",
          "title": "The tag on the git repository"
        },
        "git_commit": {
          "type": "string",
          "title": "The hash of the git commit"
        },
        "git_tree_state": {
          "type": "string",
          "title": "Whether or not the tree was clean when built"
        },
        "build_date": {
          "type": "string",
          "title": "Date of build"
        },
        "go_version": {
          "type": "string",
          "title": "Version of go used to compile"
        },
        "compiler": {
          "type": "string",
          "title": "Compiler used"
        },
        "platform": {
          "type": "string",
          "title": "Platform it was compiled for / running on"
        }
      }
    },
    "cluster_manager_apiAWSCredentials": {
      "type": "object",
      "properties": {
        "secret_key_id": {
          "type": "string",
          "title": "The SecretKeyId for API Access"
        },
        "secret_access_key": {
          "type": "string",
          "title": "The SecretAccessKey for API access"
        },
        "region": {
          "type": "string",
          "title": "The Region for API access"
        }
      },
      "title": "The credentials to use for creating the cluster"
    },
    "cluster_manager_apiAdjustClusterMsg": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "What is the cluster that we are considering for upgrade"
        },
        "provider": {
          "$ref": "#/definitions/cluster_manager_apiProvider",
          "title": "Name of the providers (aws/azure/vmware/etc)"
        },
        "aws": {
          "$ref": "#/definitions/cluster_manager_apiAWSCredentials",
          "title": "AWS Credentials"
        },
        "azure": {
          "$ref": "#/definitions/AdjustClusterMsgAdjustClusterAKSSpec",
          "title": "The AWS specification\nAdjustClusterAWSSpec aws = 5;"
        },
        "vmware": {
          "$ref": "#/definitions/AdjustClusterMsgAdjustClusterVMWareSpec"
        },
        "callback": {
          "$ref": "#/definitions/cluster_manager_apiCallback",
          "title": "Callback information"
        }
      }
    },
    "cluster_manager_apiAdjustClusterReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Was this a successful request"
        }
      }
    },
    "cluster_manager_apiAzureCredentials": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "string",
          "title": "The AppId for API Access"
        },
        "tenant": {
          "type": "string",
          "title": "The Tenant for API access"
        },
        "password": {
          "type": "string",
          "title": "The Password for API access"
        },
        "subscription_id": {
          "type": "string",
          "title": "The Subscription for API access"
        }
      },
      "title": "The credentials to use for creating the cluster"
    },
    "cluster_manager_apiCallback": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "The URL to call back to"
        },
        "request_id": {
          "type": "string",
          "title": "The ID of the request"
        }
      }
    },
    "cluster_manager_apiClusterDetailItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID of the cluster"
        },
        "name": {
          "type": "string",
          "title": "Name of the cluster"
        },
        "status_message": {
          "type": "string",
          "title": "Additional information about the status of the cluster"
        },
        "kubeconfig": {
          "type": "string",
          "title": "What is the kubeconfig to connect to the cluster"
        },
        "status": {
          "$ref": "#/definitions/cluster_manager_apiClusterStatus",
          "title": "The status of the cluster"
        }
      }
    },
    "cluster_manager_apiClusterItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID of the cluster"
        },
        "name": {
          "type": "string",
          "title": "Name of the cluster"
        },
        "status_message": {
          "type": "string",
          "title": "Additional information about the status of the cluster"
        },
        "status": {
          "$ref": "#/definitions/cluster_manager_apiClusterStatus",
          "title": "The status of the cluster"
        }
      }
    },
    "cluster_manager_apiClusterStatus": {
      "type": "string",
      "enum": [
        "STATUS_UNSPECIFIED",
        "PROVISIONING",
        "RUNNING",
        "RECONCILING",
        "STOPPING",
        "ERROR",
        "DEGRADED"
      ],
      "default": "STATUS_UNSPECIFIED",
      "title": "- STATUS_UNSPECIFIED: Not set\n - PROVISIONING: The PROVISIONING state indicates the cluster is being created.\n - RUNNING: The RUNNING state indicates the cluster has been created and is fully usable.\n - RECONCILING: The RECONCILING state indicates that some work is actively being done on the cluster, such as upgrading the master or node software.\n - STOPPING: The STOPPING state indicates the cluster is being deleted\n - ERROR: The ERROR state indicates the cluster may be unusable\n - DEGRADED: The DEGRADED state indicates the cluster requires user action to restore full functionality"
    },
    "cluster_manager_apiCreateClusterAKSSpec": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "title": "The Azure Data Center"
        },
        "credentials": {
          "$ref": "#/definitions/cluster_manager_apiAzureCredentials",
          "title": "Credentials to build the cluster"
        },
        "instance_groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateClusterAKSSpecAKSInstanceGroup"
          },
          "title": "Instance groups"
        }
      }
    },
    "cluster_manager_apiCreateClusterAWSSpec": {
      "type": "object",
      "properties": {
        "data_center": {
          "$ref": "#/definitions/CreateClusterAWSSpecAWSDataCenter",
          "title": "The AWS Data Center"
        },
        "credentials": {
          "$ref": "#/definitions/cluster_manager_apiAWSCredentials",
          "title": "Credentials to build the cluster"
        },
        "resources": {
          "$ref": "#/definitions/CreateClusterAWSSpecAWSPreconfiguredItems",
          "title": "BYO items"
        },
        "instance_groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateClusterAWSSpecAWSInstanceGroup"
          },
          "title": "Instance groups"
        }
      }
    },
    "cluster_manager_apiCreateClusterMsg": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the cluster to be provisioned"
        },
        "provider": {
          "$ref": "#/definitions/cluster_manager_apiCreateClusterProviderSpec",
          "title": "The provider specification"
        },
        "callback": {
          "$ref": "#/definitions/cluster_manager_apiCallback",
          "title": "Callback information"
        }
      }
    },
    "cluster_manager_apiCreateClusterProviderSpec": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "What is the provider - currently this is aws or maas"
        },
        "k8s_version": {
          "type": "string",
          "title": "The version of Kubernetes"
        },
        "aws": {
          "$ref": "#/definitions/cluster_manager_apiCreateClusterAWSSpec",
          "title": "The AWS specification"
        },
        "azure": {
          "$ref": "#/definitions/cluster_manager_apiCreateClusterAKSSpec"
        },
        "vmware": {
          "$ref": "#/definitions/cluster_manager_apiCreateClusterVMWareSpec"
        },
        "high_availability": {
          "type": "boolean",
          "format": "boolean",
          "title": "Whether or not the cluster is HA"
        },
        "network_fabric": {
          "type": "string",
          "title": "The fabric to be used"
        }
      }
    },
    "cluster_manager_apiCreateClusterReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Whether or not the cluster was provisioned by this request"
        },
        "cluster": {
          "$ref": "#/definitions/cluster_manager_apiClusterItem",
          "title": "The details of the cluster request response"
        }
      }
    },
    "cluster_manager_apiCreateClusterVMWareSpec": {
      "type": "object",
      "properties": {
        "control_plane_nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cluster_manager_apiVMWareMachineSpec"
          },
          "title": "Machines which comprise the cluster"
        },
        "worker_nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cluster_manager_apiVMWareMachineSpec"
          },
          "title": "Machines which comprise the cluster"
        },
        "api_endpoint": {
          "type": "string",
          "title": "This should be a value like ip:port that will be a virtual IP/port\nPassed back to external customers to be able to communicate to the cluster"
        }
      }
    },
    "cluster_manager_apiDeleteClusterReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Could the cluster be destroyed"
        },
        "status": {
          "type": "string",
          "title": "Status of the request"
        }
      }
    },
    "cluster_manager_apiDeleteHelmChartReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Was the operation successful"
        },
        "message": {
          "type": "string",
          "title": "What messages were given"
        }
      }
    },
    "cluster_manager_apiGenericHelmChart": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "What is the name of the deployment"
        },
        "namespace": {
          "type": "string",
          "title": "What is the namespace to deploy the application to"
        },
        "repo": {
          "$ref": "#/definitions/GenericHelmChartChartRepository",
          "title": "What is the chart repository"
        },
        "chart": {
          "type": "string",
          "title": "What is the chart name"
        },
        "version": {
          "type": "string",
          "title": "What is the chart version"
        },
        "values": {
          "type": "string",
          "title": "What are the options (nested yaml - the Values.yaml contents)"
        },
        "chart_payload": {
          "type": "string",
          "format": "byte",
          "title": "The payload of a chart (for airgapped solutions, etc)"
        }
      }
    },
    "cluster_manager_apiGetClusterListReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Is the cluster in the system"
        },
        "clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cluster_manager_apiClusterItem"
          },
          "title": "List of clusters"
        }
      }
    },
    "cluster_manager_apiGetClusterReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Is the cluster in the system"
        },
        "cluster": {
          "$ref": "#/definitions/cluster_manager_apiClusterDetailItem"
        }
      }
    },
    "cluster_manager_apiGetUpgradeClusterInformationReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Can the cluster be upgraded"
        },
        "versions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "What versions are possible right now"
        }
      }
    },
    "cluster_manager_apiGetVersionReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "If operation was OK"
        },
        "version_information": {
          "$ref": "#/definitions/GetVersionReplyVersionInformation",
          "title": "Version Information"
        }
      },
      "title": "Reply for version request"
    },
    "cluster_manager_apiInstallHelmChartMsg": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "title": "Cluster tiller should be installed on"
        },
        "package_manger": {
          "type": "string",
          "title": "What tiller should be used"
        },
        "chart": {
          "$ref": "#/definitions/cluster_manager_apiGenericHelmChart",
          "title": "Chart Settings"
        },
        "aws": {
          "$ref": "#/definitions/cluster_manager_apiAWSCredentials",
          "title": "AWS Credentials"
        },
        "azure": {
          "$ref": "#/definitions/cluster_manager_apiAzureCredentials",
          "title": "Azure Credentials"
        },
        "provider": {
          "$ref": "#/definitions/cluster_manager_apiProvider",
          "title": "Name of the providers (aws/azure/vmware/etc)"
        },
        "callback": {
          "$ref": "#/definitions/cluster_manager_apiCallback",
          "title": "Callback information"
        }
      }
    },
    "cluster_manager_apiInstallHelmChartReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Was the operation successful"
        },
        "message": {
          "type": "string",
          "title": "What messages were given"
        }
      }
    },
    "cluster_manager_apiKubernetesLabel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of a label"
        },
        "value": {
          "type": "string",
          "title": "The value of a label"
        }
      }
    },
    "cluster_manager_apiProvider": {
      "type": "string",
      "enum": [
        "undefined",
        "aws",
        "azure",
        "vmware"
      ],
      "default": "undefined"
    },
    "cluster_manager_apiProvisionTillerMsg": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the tiller / package manager"
        },
        "cluster": {
          "type": "string",
          "title": "Cluster tiller should be installed on"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace tiller should be installed in"
        },
        "image": {
          "type": "string",
          "title": "image (if not the default) for tiller (quay.io/someguy/tiller)"
        },
        "version": {
          "type": "string",
          "title": "Version of tiller/helm to install / upgrade to (v2.11.0, etc)"
        },
        "cluster_wide": {
          "type": "boolean",
          "format": "boolean",
          "title": "Is the tiller a cluster-wide tiller?\nShould it have cluster-wide admin privileges?"
        },
        "admin_namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Namespaces that it should be able to admin on"
        },
        "aws": {
          "$ref": "#/definitions/cluster_manager_apiAWSCredentials",
          "title": "AWS Credentials"
        },
        "azure": {
          "$ref": "#/definitions/cluster_manager_apiAzureCredentials",
          "title": "Azure Credentials"
        },
        "provider": {
          "$ref": "#/definitions/cluster_manager_apiProvider",
          "title": "Name of the providers (aws/azure/vmware/etc)"
        },
        "callback": {
          "$ref": "#/definitions/cluster_manager_apiCallback",
          "title": "Callback information"
        }
      }
    },
    "cluster_manager_apiProvisionTillerReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Was the operation successful"
        },
        "message": {
          "type": "string",
          "title": "What messages were given"
        }
      }
    },
    "cluster_manager_apiUpdateAWSCredentialsMsg": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Cluster name"
        },
        "credentials": {
          "$ref": "#/definitions/cluster_manager_apiAWSCredentials",
          "title": "Credentials to build the cluster"
        }
      }
    },
    "cluster_manager_apiUpdateAWSCredentialsReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Was this a successful request"
        }
      }
    },
    "cluster_manager_apiUpdateAzureCredentialsMsg": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Cluster name"
        },
        "credentials": {
          "$ref": "#/definitions/cluster_manager_apiAzureCredentials",
          "title": "Credentials to build the cluster"
        }
      }
    },
    "cluster_manager_apiUpdateAzureCredentialsReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Was this a successful request"
        }
      }
    },
    "cluster_manager_apiUpgradeClusterMsg": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/cluster_manager_apiProvider",
          "title": "Name of the providers (aws/azure/vmware/etc)"
        },
        "aws": {
          "$ref": "#/definitions/cluster_manager_apiAWSCredentials",
          "title": "AWS Credentials"
        },
        "azure": {
          "$ref": "#/definitions/cluster_manager_apiAzureCredentials",
          "title": "Azure Credentials"
        },
        "name": {
          "type": "string",
          "title": "What is the cluster that we are considering for upgrade"
        },
        "version": {
          "type": "string",
          "title": "What version are we upgrading to?"
        },
        "callback": {
          "$ref": "#/definitions/cluster_manager_apiCallback",
          "title": "Callback information"
        }
      }
    },
    "cluster_manager_apiUpgradeClusterReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Was this a successful request"
        }
      }
    },
    "cluster_manager_apiVMWareMachineSpec": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "The username for SSH access"
        },
        "host": {
          "type": "string",
          "title": "The host for SSH access"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "title": "The port for SSH access"
        },
        "password": {
          "type": "string",
          "description": "The k8s version for the control plane. This node is only a master if this field is defined."
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cluster_manager_apiKubernetesLabel"
          },
          "title": "The labels for the machines"
        }
      },
      "title": "The specification for a specific node"
    }
  },
  "externalDocs": {
    "description": "More about Cluster Manager API",
    "url": "https://github.com/samsung-cnct/cluster-manager-api"
  }
}
